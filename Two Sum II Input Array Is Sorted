//443 MS
class Solution {
    public int[] twoSum(int[] nums, int target) {
        for (int i = 0; i < nums.length; i++) {
            for (int j = i + 1; j < nums.length; j++) {
                if (target == nums[i] + nums[j]) {
                    return new int[] { i + 1, j + 1};
                }
            }
        }
        // In case there is no solution, we'll just return null
        return null;
    }

}


// 6 MS

import java.util.HashMap;
import java.util.Map;

class Solution {
    public int[] twoSum(int[] numbers, int target) {
        Map<Integer, Integer> numMap = new HashMap<>();

        for (int i = 0; i < numbers.length; i++) {
            int complement = target - numbers[i];
            if (numMap.containsKey(complement)) {
                return new int[] { numMap.get(complement) + 1, i + 1 };
            }
            numMap.put(numbers[i], i);
        }

        return null; // Если решение не найдено
    }
}
